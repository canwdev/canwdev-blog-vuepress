(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{644:function(e,n,t){"use strict";t.r(n);var s=t(56),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"nginx-安装与配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-安装与配置"}},[e._v("#")]),e._v(" Nginx 安装与配置")]),e._v(" "),t("h2",{attrs:{id:"ubuntu-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-安装"}},[e._v("#")]),e._v(" Ubuntu 安装")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" nginx\n")])])]),t("h2",{attrs:{id:"windows-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows-安装"}},[e._v("#")]),e._v(" Windows 安装")]),e._v(" "),t("p",[e._v("下载二进制文件 "),t("a",{attrs:{href:"http://nginx.org/en/docs/windows.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("nginx for Windows"),t("OutboundLink")],1),e._v(" 并解压")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd c:\\\nunzip nginx-1.17.9.zip\ncd nginx-1.17.9\n# 后台运行\nstart nginx\n\nnginx -s stop \t# fast shutdown\nnginx -s quit \t# graceful shutdown\nnginx -s reload \t# changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes\nnginx -s reopen \t# re-opening log files\n")])])]),t("p",[e._v("修改 "),t("code",[e._v("conf/nginx.conf")]),e._v("，在 "),t("code",[e._v("http {}")]),e._v(" 中进行配置：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n  listen 3082;\n  server_name localhost ;\n\n  location / {\n    # Windows 中必须使用正斜杠“/”，不能用反斜杠“\\”\n    root C:/vuepress/dist;\n    index index.html index.htm;\n  }\n}\n")])])]),t("h2",{attrs:{id:"一般情况-nginx-的配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一般情况-nginx-的配置"}},[e._v("#")]),e._v(" 一般情况 nginx 的配置")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 编辑配置文件")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /etc/nginx/sites-enabled/default\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 重新加载配置")]),e._v("\nnginx -s reload\n")])])]),t("h3",{attrs:{id:"托管静态文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#托管静态文件"}},[e._v("#")]),e._v(" 托管静态文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n  listen 8080;\n  server_name localhost;\n\n  location / {\n    autoindex on;\n    root /usr/myservice/app8080/;\n    index index.html;\n  }\n}\n\nserver {\n  listen 8099;\n  server_name localhost;\n\n  location / {\n    root /usr/www/node-blog-management-ui/;\n    index index.html;\n  }\n}\n")])])]),t("h3",{attrs:{id:"开启目录浏览-autoindex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开启目录浏览-autoindex"}},[e._v("#")]),e._v(" 开启目录浏览（autoindex）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n    listen 3000;\n    server_name localhost;\n    location / {\n        autoindex on;             # 开启目录浏览\n        autoindex_exact_size off; # 默认为on，显示出文件的确切大小，单位是bytes。改为on后，显示的文件时间为文件的服务器时间。\n        autoindex_localtime on;   # 默认为off，显示的文件时间为GMT时间。改为on后，显示的文件时间为文件的服务器时间。\n        charset utf-8,gbk;        # 解决中文乱码问题\n\n        root /usr/www/vuepress/docs/.vuepress/dist;\n        index index.html;\n    }\n}\n")])])]),t("h3",{attrs:{id:"使用-ssl-https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-ssl-https"}},[e._v("#")]),e._v(" 使用 SSL(HTTPS)")]),e._v(" "),t("p",[e._v("一般情况下使用 443 端口作为 https 默认端口：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n\tlisten                  80 default_server;\n\tlisten                  [::]:80 default_server;\n\n\tlisten                  *:443 ssl;\n\tssl_certificate         /home/ubuntu/server/cert/rootCA.pem;\n\tssl_certificate_key     /home/ubuntu/server/cert/rootCA.key;\n\n\tlocation / {\n        autoindex on;\n        root /usr/myservice/app8080/;\n        index index.html;\n\t}\n}\n")])])]),t("p",[e._v("由于服务器无备案，只能在非 80/443 端口设置SSL：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n  listen 81 ssl;\n  listen 8080;\n  server_name example.com;\n\n  # HTTP强制跳转HTTPS\n  error_page 497  https://$host:$server_port$request_uri;\n\n  ssl_certificate /usr/www/ssl/certificate.crt;\n  ssl_certificate_key /usr/www/ssl/private.key;\n\n  location / {\n    autoindex on;\n    root /usr/myservice/app8080/;\n    index index.html;\n  }\n}\n")])])]),t("h3",{attrs:{id:"代理应用端口-如node-js、jenkins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理应用端口-如node-js、jenkins"}},[e._v("#")]),e._v(" 代理应用端口（如Node.js、Jenkins）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# jenkins\nserver {\n  listen 8098 ssl;\n  server_name example.com;\n\n  error_page 497  https://$host:$server_port$request_uri;\n  ssl_certificate /usr/www/ssl/certificate.crt;\n  ssl_certificate_key /usr/www/ssl/private.key;\n\n  location / {\n    proxy_set_header        Host $host:$server_port;\n    proxy_set_header        X-Real-IP $remote_addr;\n    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header        X-Forwarded-Proto $scheme;\n    proxy_pass http://localhost:3001;\n  }\n}\n\n# node-blog-server\nserver {\n  listen 9002 ssl;\n  server_name example.com;\n\n  ssl_certificate /usr/www/ssl/certificate.crt;\n  ssl_certificate_key /usr/www/ssl/private.key;\n\n  location / {\n  proxy_set_header        Host $host:$server_port;\n    proxy_set_header        X-Real-IP $remote_addr;\n    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header        X-Forwarded-Proto $scheme;\n    # 默认请求body只有2M，调大可避免上传大文件时的报错！\n    client_max_body_size 200M;\n    proxy_pass http://localhost:3102;\n  }\n}\n")])])]),t("h3",{attrs:{id:"生成自签证书-pem-key-crt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成自签证书-pem-key-crt"}},[e._v("#")]),e._v(" 生成自签证书（.pem/.key/.crt）")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("openssl genrsa -des3 -out rootCA.key "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2048")]),e._v("\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1024")]),e._v(" -out rootCA.pem\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 转换成 crt 格式")]),e._v("\nopenssl x509 -outform der -in rootCA.pem -out rootCA.crt\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("openssl req -newkey rsa:4096 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n            -x509 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n            -sha256 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n            -days "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3650")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n            -nodes "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n            -out example.crt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n            -keyout example.key\n")])])]),t("p",[e._v("注意：因为是自签名的证书，如果没有导入证书到系统信任列表里会遇到警告，可以直接忽略。")]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/5a6db896518825732d7fd8e0",target:"_blank",rel:"noopener noreferrer"}},[e._v("【译】如何在5分钟内让HTTPS在您的本地开发环境中工作"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Fishdrowned/ssl",target:"_blank",rel:"noopener noreferrer"}},[e._v("自签泛域名证书"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"开启-cors-on-nginx-跨域支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开启-cors-on-nginx-跨域支持"}},[e._v("#")]),e._v(" 开启 "),t("a",{attrs:{href:"https://enable-cors.org/server_nginx.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CORS on Nginx"),t("OutboundLink")],1),e._v(" 跨域支持")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("#\n# Wide-open CORS config for nginx\n#\nlocation / {\n     if ($request_method = 'OPTIONS') {\n        add_header 'Access-Control-Allow-Origin' '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n        #\n        # Custom headers and headers various browsers *should* be OK with but aren't\n        #\n        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n        #\n        # Tell client that this pre-flight info is valid for 20 days\n        #\n        add_header 'Access-Control-Max-Age' 1728000;\n        add_header 'Content-Type' 'text/plain; charset=utf-8';\n        add_header 'Content-Length' 0;\n        return 204;\n     }\n     if ($request_method = 'POST') {\n        add_header 'Access-Control-Allow-Origin' '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n     }\n     if ($request_method = 'GET') {\n        add_header 'Access-Control-Allow-Origin' '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n     }\n}\n")])])]),t("h3",{attrs:{id:"nginx-反向代理-mysql-的配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-反向代理-mysql-的配置"}},[e._v("#")]),e._v(" Nginx 反向代理 MySQL 的配置")]),e._v(" "),t("blockquote",[t("p",[e._v("这对调试限制访问 IP 的生产服务器 MySQL Server 很有用")])]),e._v(" "),t("p",[e._v("首先，确保安装了 "),t("code",[e._v("nginx")]),e._v(" 和 "),t("code",[e._v("nginx-mod-stream")]),e._v("，一般在 Ubunut 上安装 nginx 时就会自带这个组件。使用 "),t("code",[e._v("nginx -V")]),e._v(" 查看。")]),e._v(" "),t("p",[e._v("编辑配置文件 "),t("code",[e._v("/etc/nginx/nginx.conf")]),e._v(" 与 http 节点同级：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("stream {\n    upstream mysql {\n        hash $remote_addr consistent;\n        server 192.168.99.2:3306 max_fails=3 fail_timeout=30s;\n    }\n    server {\n        listen 3307;\n        proxy_connect_timeout 30s;\n        proxy_timeout 600s;\n        proxy_pass mysql;\n    }\n}\n")])])]),t("p",[e._v("保存，并使用 "),t("code",[e._v("nginx -t")]),e._v(" 测试配置的正确性，如果测试无误，使用 "),t("code",[e._v("nginx -s reload")]),e._v(" 使配置生效。")]),e._v(" "),t("p",[e._v("成功配置后，就可以使用 MySQL 客户端访问当前服务器的 3307 端口连接 "),t("code",[e._v("192.168.99.2:3306")]),e._v(" 的 MySQL 服务器了。")])])}),[],!1,null,null,null);n.default=a.exports}}]);