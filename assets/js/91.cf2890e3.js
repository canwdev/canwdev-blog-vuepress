(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{668:function(e,t,r){"use strict";r.r(t);var v=r(56),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"✅-js-es5和es6、es7有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#✅-js-es5和es6、es7有什么区别"}},[e._v("#")]),e._v(" ✅ [js] "),r("a",{attrs:{href:"https://github.com/haizlin/fe-interview/issues/1298",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES5和ES6、ES7有什么区别？"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"es5-新特性-参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es5-新特性-参考"}},[e._v("#")]),e._v(" ES5 新特性 "),r("a",{attrs:{href:"https://www.jianshu.com/p/38b0c4666338",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("新增Object接口\n"),r("ul",[r("li",[e._v("Object    getPrototypeOf  返回对象的原型")]),e._v(" "),r("li",[e._v("Object    getOwnPropertyDescriptor    返回对象自有属性的属性描述符")]),e._v(" "),r("li",[e._v("Object    getOwnPropertyNames 返回一个数组，包括对象所有自有属性名称集合（包括不可枚举的属性）")]),e._v(" "),r("li",[e._v("Object    create  创建一个拥有置顶原型和若干个指定属性的对象")]),e._v(" "),r("li",[e._v("Object    defineProperty  给对象定义一个新属性，或者修改已有的属性，并返回")]),e._v(" "),r("li",[e._v("Object    defineProperties    在一个对象上添加或修改一个或者多个自有属性，并返回该对象")]),e._v(" "),r("li",[e._v("Object    seal    锁定对象。阻止修改现有属性的特性，并阻止添加新属性。但是可以修改已有属性的值。")]),e._v(" "),r("li",[e._v("Object    freeze  冻结对象，阻止对对象的一切操作。冻结对象将永远不可变。")]),e._v(" "),r("li",[e._v("Object    preventExtensions   让一个对象变的不可扩展，也就是永远不能再添加新的属性。")]),e._v(" "),r("li",[e._v("Object    isSealed    判断对象是否被锁定")]),e._v(" "),r("li",[e._v("Object    isFrozen    判断对象是否被冻结")]),e._v(" "),r("li",[e._v("Object    isExtensible    判断对象是否可以被扩展")]),e._v(" "),r("li",[e._v("Object    keys    返回一个由给定对象的所有可枚举自身属性的属性名组成的数组")])])]),e._v(" "),r("li",[e._v("新增Array接口\n"),r("ul",[r("li",[e._v("Array.prototype   indexOf 返回根据给定元素找到的第一个索引值，否则返回-1")]),e._v(" "),r("li",[e._v("Array.prototype   lastIndexOf 方法返回指定元素在数组中的最后一个的索引，如果不存在则返回 -1")]),e._v(" "),r("li",[e._v("Array.prototype   every   测试数组的所有元素是否都通过了指定函数的测试-检测数组中的所有元素是否都大于 10,返回true or false")]),e._v(" "),r("li",[e._v("Array.prototype   some    测试数组中的某些元素是否通过了指定函数的测试-检测在数组中是否有元素大于 10,返回true or false")]),e._v(" "),r("li",[e._v("Array.prototype   forEach 让数组的每一项都执行一次给定的函数-循环-返回 undefined("),r("strong",[e._v("forEach无法使用break，continue跳出循环，使用return时，效果和在for循环中使用continue一致")]),e._v(")")]),e._v(" "),r("li",[e._v("Array.prototype   map 返回一个由原数组中的每个元素调用一个指定方法后的返回值组成的新数组")]),e._v(" "),r("li",[e._v("Array.prototype   filter  利用所有通过指定函数测试的元素创建一个新的数组，并返回-创建了一个新数组，该数组的元素由原数组中值大于 10 的元素组成。")]),e._v(" "),r("li",[e._v("Array.prototype   reduce  接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终为一个值")]),e._v(" "),r("li",[e._v("Array.prototype   reduceRight 接受一个函数作为累加器，让每个值（从右到左，亦即从尾到头）缩减为一个值")])])]),e._v(" "),r("li",[e._v("新增Function接口\n"),r("ul",[r("li",[r("strong",[e._v("Function.prototype.bind")]),e._v("  bind()方法会创建一个新函数,称为绑定函数.当调用这个绑定函数时,绑定函数会以创建它时传入 bind()方法的第一个参数作为 this,传入 bind() 方法的第二个以及以后的参数加上绑定函数运行时本身的参数按照顺序作为原函数的参数来调用原函数。")])])]),e._v(" "),r("li",[e._v("严格模式")]),e._v(" "),r("li",[e._v("JSON 对象")])]),e._v(" "),r("h3",{attrs:{id:"es6-新特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6-新特性"}},[e._v("#")]),e._v(" ES6 新特性")]),e._v(" "),r("ul",[r("li",[e._v("class 类")]),e._v(" "),r("li",[e._v("模块化 import export")]),e._v(" "),r("li",[e._v("箭头函数")]),e._v(" "),r("li",[e._v("模板字符串")]),e._v(" "),r("li",[e._v("Promise")]),e._v(" "),r("li",[e._v("async/await")]),e._v(" "),r("li",[e._v("解构赋值")]),e._v(" "),r("li",[e._v("let和const")]),e._v(" "),r("li",[e._v("函数参数默认值")])]),e._v(" "),r("h3",{attrs:{id:"es7-新特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es7-新特性"}},[e._v("#")]),e._v(" ES7 新特性")]),e._v(" "),r("ul",[r("li",[e._v("Array.prototype.includes")]),e._v(" "),r("li",[e._v("指数运算符**")])])])}),[],!1,null,null,null);t.default=_.exports}}]);